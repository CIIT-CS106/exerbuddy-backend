version: '1'

services:
  dev:
    container_name: 'exerbuddy-backend-dev'
    image: 'exerbuddy-backend-dev:1.0.0'
    environment:
      - SECRET_KEY=exerbuddy
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=exerbuddy-rocks
      - JWT_SECRET=exerbuddy
      - JWT_EXPIRES_IN=3600
    depends_on:
      - postgres
    links:
      - postgres:postgres
    build:
      context: .
      target: development
      dockerfile: ./DockerFile
    command: npm run start:debug
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - exerbuddy-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  prod:
    container_name: 'exerbuddy-backend-prod'
    image: 'exerbuddy-backend-prod:1.0.0'
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=exerbuddy-rocks
      - SECRET_KEY=exerbuddy
      - JWT_SECRET=exerbuddy
      - JWT_EXPIRES_IN=3600
    depends_on:
      - postgres
    links:
      - postgres:postgres
    build:
      context: .
      target: production
      dockerfile: ./DockerFile
    command: npm run start:prod

    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - exerbuddy-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  postgres:
    image: postgres:13-alpine
    restart: always
    volumes:
      - pg-volume:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=exerbuddy-rocks
      - POSTGRES_DB=exerbuddy
    ports:
      - '5432:5432'

    networks:
      - exerbuddy-network
networks:
  exerbuddy-network:
volumes:
  pg-volume:
